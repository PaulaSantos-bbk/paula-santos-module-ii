{"version":3,"sources":["pages/HomePage/index.jsx","pages/StarterPage/index.jsx","pages/MainPage/index.jsx","pages/DessertPage/index.jsx","pages/BreadPage/index.jsx","pages/ContactPage/index.jsx","App.js","serviceWorker.js","components/NavBar/index.jsx","index.js"],"names":["HomePage","StarterPage","className","MainPage","DessertPage","BreadPage","ContactPage","htmlFor","id","label","type","required","rows","cols","name","input","disabled","event","preventDefault","App","path","exact","component","Boolean","window","location","hostname","match","NavBar","to","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qVAIeA,EAFE,kBAAM,oDCqBRC,G,MApBK,kBAClB,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,MAAd,uBAEF,yBAAKA,UAAU,eACb,2CACA,6CACA,6CACA,gDAEF,yBAAKA,UAAU,UACb,sCACA,uCACA,uCACA,6CCISC,EApBE,kBACf,yBAAKD,UAAU,aACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,MAAd,2BAEF,yBAAKA,UAAU,eACb,2CACA,6CACA,6CACA,gDAEF,yBAAKA,UAAU,UACb,sCACA,uCACA,uCACA,4CCKSE,EApBK,kBAClB,yBAAKF,UAAU,aACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,MAAd,uBAEF,yBAAKA,UAAU,eACb,2CACA,6CACA,6CACA,gDAEF,yBAAKA,UAAU,UACb,sCACA,uCACA,uCACA,4CCKSG,EApBG,kBAChB,yBAAKH,UAAU,aACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,MAAd,sBAEF,yBAAKA,UAAU,eACb,2CACA,6CACA,6CACA,gDAEF,yBAAKA,UAAU,UACb,sCACA,uCACA,uCACA,4CC6BSI,G,MA3CK,WAKlB,OACE,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,8BACE,2BAAOK,QAAQ,SAAf,gBACA,6BACA,2BAAOC,GAAG,OAAOC,MAAM,OAAOC,KAAK,OAAOC,UAAQ,IAClD,6BACA,2BAAOJ,QAAQ,SAAf,iBACA,6BACA,2BAAOC,GAAG,QAAQC,MAAM,cAAcC,KAAK,QAAQC,UAAQ,IAC3D,6BACA,2BAAOJ,QAAQ,WAAf,mBACA,6BACA,8BACEK,KAAK,IACLC,KAAK,KACLC,KAAK,UACLN,GAAG,UACHG,UAAQ,IAEV,6BACA,4BACEI,MAAM,SACNL,KAAK,SACLR,UAAU,MACVc,UAjCW,SAACC,GACpBA,EAAMC,mBA4BA,eCYKC,MAhCf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,WAAWE,UAAWrB,IAClC,kBAAC,IAAD,CAAOmB,KAAK,QAAQE,UAAWnB,IAC/B,kBAAC,IAAD,CAAOiB,KAAK,WAAWE,UAAWlB,IAClC,kBAAC,IAAD,CAAOgB,KAAK,kBAAkBE,UAAWjB,IACzC,kBAAC,IAAD,CAAOe,KAAK,WAAWE,UAAWhB,MCTpBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCaSC,G,MA3BA,kBACb,6BACE,4BACE,4BACE,kBAAC,IAAD,CAASC,GAAG,IAAIR,OAAK,GAArB,SAIF,4BACE,kBAAC,IAAD,CAASQ,GAAG,YAAZ,YAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,SAAZ,gBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,YAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,mBAAZ,mBAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,gBCjBRC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7cafe5d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => <div>I am the homepage!</div>;\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport \"./StarterPage.css\";\r\n\r\nconst StarterPage = () => (\r\n  <div className=\"container\">\r\n    <div className=\"hero\">\r\n      <h1 className=\"h1\">I'm the starter!!!</h1>\r\n    </div>\r\n    <div className=\"ingredients\">\r\n      <h2>Ingredients</h2>\r\n      <p>ingredient one</p>\r\n      <p>ingredient two</p>\r\n      <p>ingredient three</p>\r\n    </div>\r\n    <div className=\"method\">\r\n      <h2>Method</h2>\r\n      <p>step one</p>\r\n      <p>step two</p>\r\n      <p>step three</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default StarterPage;\r\n","import React from \"react\";\r\n\r\nconst MainPage = () => (\r\n  <div className=\"container\">\r\n    <div className=\"hero\">\r\n      <h1 className=\"h1\">I'm the main course!!!</h1>\r\n    </div>\r\n    <div className=\"ingredients\">\r\n      <h2>Ingredients</h2>\r\n      <p>ingredient one</p>\r\n      <p>ingredient two</p>\r\n      <p>ingredient three</p>\r\n    </div>\r\n    <div className=\"method\">\r\n      <h2>Method</h2>\r\n      <p>step one</p>\r\n      <p>step two</p>\r\n      <p>step three</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\nconst DessertPage = () => (\r\n  <div className=\"container\">\r\n    <div className=\"hero\">\r\n      <h1 className=\"h1\">I'm the dessert!!!</h1>\r\n    </div>\r\n    <div className=\"ingredients\">\r\n      <h2>Ingredients</h2>\r\n      <p>ingredient one</p>\r\n      <p>ingredient two</p>\r\n      <p>ingredient three</p>\r\n    </div>\r\n    <div className=\"method\">\r\n      <h2>Method</h2>\r\n      <p>step one</p>\r\n      <p>step two</p>\r\n      <p>step three</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default DessertPage;\r\n","import React from \"react\";\r\n\r\nconst BreadPage = () => (\r\n  <div className=\"container\">\r\n    <div className=\"hero\">\r\n      <h1 className=\"h1\">Bread and Pies!!!</h1>\r\n    </div>\r\n    <div className=\"ingredients\">\r\n      <h2>Ingredients</h2>\r\n      <p>ingredient one</p>\r\n      <p>ingredient two</p>\r\n      <p>ingredient three</p>\r\n    </div>\r\n    <div className=\"method\">\r\n      <h2>Method</h2>\r\n      <p>step one</p>\r\n      <p>step two</p>\r\n      <p>step three</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BreadPage;\r\n","import React from \"react\";\r\nimport \"./ContactPage.css\";\r\n\r\nconst ContactPage = () => {\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>Contact us</h1>\r\n      </div>\r\n      <div className=\"form\">\r\n        <form>\r\n          <label htmlFor=\"fname\">*Your name: </label>\r\n          <br />\r\n          <input id=\"name\" label=\"name\" type=\"text\" required />\r\n          <br />\r\n          <label htmlFor=\"email\">*Your email: </label>\r\n          <br />\r\n          <input id=\"email\" label=\"Your email:\" type=\"email\" required />\r\n          <br />\r\n          <label htmlFor=\"comment\">*Your Comment: </label>\r\n          <br />\r\n          <textarea\r\n            rows=\"4\"\r\n            cols=\"26\"\r\n            name=\"comment\"\r\n            id=\"comment\"\r\n            required\r\n          ></textarea>\r\n          <br />\r\n          <button\r\n            input=\"submit\"\r\n            type=\"submit\"\r\n            className=\"btn\"\r\n            disabled={!onFormSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactPage;\r\n","import React from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport {\n  HomePage,\n  StarterPage,\n  MainPage,\n  DessertPage,\n  BreadPage,\n  ContactPage,\n} from \"./pages\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/starter\" component={StarterPage} />\n      <Route path=\"/main\" component={MainPage} />\n      <Route path=\"/dessert\" component={DessertPage} />\n      <Route path=\"/bread-and-pies\" component={BreadPage} />\n      <Route path=\"/contact\" component={ContactPage} />\n    </Switch>\n\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div> \n    */\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/starter\">Starter</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/main\">Main course</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/dessert\">Dessert</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/bread-and-pies\">Bread and Pies</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/contact\">Contact</NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { NavBar } from \"./components\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <NavBar />\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}